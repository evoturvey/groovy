// $ANTLR 2.7.2: java.g -> JavaTokenTypes.txt$
Java    // output token vocab name
BLOCK=4
MODIFIERS=5
OBJBLOCK=6
SLIST=7
METHOD_DEF=8
VARIABLE_DEF=9
INSTANCE_INIT=10
STATIC_INIT=11
TYPE=12
CLASS_DEF=13
INTERFACE_DEF=14
PACKAGE_DEF=15
ARRAY_DECLARATOR=16
EXTENDS_CLAUSE=17
IMPLEMENTS_CLAUSE=18
PARAMETERS=19
PARAMETER_DEF=20
LABELED_STAT=21
TYPECAST=22
INDEX_OP=23
POST_INC=24
POST_DEC=25
METHOD_CALL=26
EXPR=27
ARRAY_INIT=28
IMPORT=29
UNARY_MINUS=30
UNARY_PLUS=31
CASE_GROUP=32
ELIST=33
FOR_INIT=34
FOR_CONDITION=35
FOR_ITERATOR=36
EMPTY_STAT=37
FINAL="final"=38
ABSTRACT="abstract"=39
STRICTFP="strictfp"=40
SUPER_CTOR_CALL=41
CTOR_CALL=42
VARIABLE_PARAMETER_DEF=43
STATIC_IMPORT=44
ENUM_DEF=45
ENUM_CONSTANT_DEF=46
FOR_EACH_CLAUSE=47
ANNOTATION_DEF=48
ANNOTATIONS=49
ANNOTATION=50
ANNOTATION_MEMBER_VALUE_PAIR=51
ANNOTATION_FIELD_DEF=52
ANNOTATION_ARRAY_INIT=53
TYPE_ARGUMENTS=54
TYPE_ARGUMENT=55
TYPE_PARAMETERS=56
TYPE_PARAMETER=57
WILDCARD_TYPE=58
TYPE_UPPER_BOUNDS=59
TYPE_LOWER_BOUNDS=60
LITERAL_package="package"=61
SEMI=62
LITERAL_import="import"=63
LITERAL_static="static"=64
LBRACK=65
RBRACK=66
IDENT=67
DOT=68
QUESTION=69
LITERAL_extends="extends"=70
LITERAL_super="super"=71
LT=72
COMMA=73
GT=74
SR=75
BSR=76
LITERAL_void="void"=77
LITERAL_boolean="boolean"=78
LITERAL_byte="byte"=79
LITERAL_char="char"=80
LITERAL_short="short"=81
LITERAL_int="int"=82
LITERAL_float="float"=83
LITERAL_long="long"=84
LITERAL_double="double"=85
STAR=86
LITERAL_private="private"=87
LITERAL_public="public"=88
LITERAL_protected="protected"=89
LITERAL_transient="transient"=90
LITERAL_native="native"=91
LITERAL_threadsafe="threadsafe"=92
LITERAL_synchronized="synchronized"=93
LITERAL_volatile="volatile"=94
AT=95
LPAREN=96
RPAREN=97
ASSIGN=98
LCURLY=99
RCURLY=100
LITERAL_class="class"=101
LITERAL_interface="interface"=102
LITERAL_enum="enum"=103
BAND=104
LITERAL_default="default"=105
LITERAL_implements="implements"=106
LITERAL_this="this"=107
LITERAL_throws="throws"=108
TRIPLE_DOT=109
COLON=110
LITERAL_if="if"=111
LITERAL_else="else"=112
LITERAL_while="while"=113
LITERAL_break="break"=114
LITERAL_continue="continue"=115
LITERAL_return="return"=116
LITERAL_switch="switch"=117
LITERAL_throw="throw"=118
LITERAL_assert="assert"=119
LITERAL_for="for"=120
LITERAL_case="case"=121
LITERAL_try="try"=122
LITERAL_finally="finally"=123
LITERAL_catch="catch"=124
PLUS_ASSIGN=125
MINUS_ASSIGN=126
STAR_ASSIGN=127
DIV_ASSIGN=128
MOD_ASSIGN=129
SR_ASSIGN=130
BSR_ASSIGN=131
SL_ASSIGN=132
BAND_ASSIGN=133
BXOR_ASSIGN=134
BOR_ASSIGN=135
LOR=136
LAND=137
BOR=138
BXOR=139
NOT_EQUAL=140
EQUAL=141
LE=142
GE=143
LITERAL_instanceof="instanceof"=144
SL=145
PLUS=146
MINUS=147
DIV=148
MOD=149
INC=150
DEC=151
BNOT=152
LNOT=153
LITERAL_true="true"=154
LITERAL_false="false"=155
LITERAL_null="null"=156
LITERAL_new="new"=157
NUM_INT=158
STRING_LITERAL=159
NUM_FLOAT=160
NUM_LONG=161
NUM_DOUBLE=162
WS=163
SL_COMMENT=164
ML_COMMENT=165
ESC=166
HEX_DIGIT=167
VOCAB=168
EXPONENT=169
FLOAT_SUFFIX=170
