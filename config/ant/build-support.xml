<?xml version="1.0"?>
<!--
Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in
compliance with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under the License is
distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
implied. See the License for the specific language governing permissions and limitations under the License.

This work is copyright by the author(s) and is part of a greater work collectively copyright by the
Groovy community. See the NOTICE.txt file distributed with this work for additional information.

Author : Paul King
$Revision: 5237 $
$Date: 2007-02-18 20:17:16 +1000 (Sun, 18 Feb 2007) $
-->
<project name="build-support" default="" basedir=".">
    <property name="masterDirectory" location="../.."/>

    <macrodef name="fetch.maven.all.modules">
        <sequential>
            <fetch.maven.all.scopes module="main"/>
            <!-- just runtime scope for tools, let's not get carried away -->
            <fetch.maven scope="runtime" module="tools"/>
        </sequential>
    </macrodef>

    <macrodef name="fetch.maven.all.scopes">
        <attribute name="module"/>
        <sequential>
            <fetch.maven scope="compile" module="@{module}"/>
            <fetch.maven scope="runtime" module="@{module}"/>
            <fetch.maven scope="test" module="@{module}"/>
        </sequential>
    </macrodef>

    <macrodef name="fetch.maven">
        <attribute name="scope"/>
        <attribute name="module"/>
        <sequential>
            <maven.dependencies useScope="@{scope}" filesetId="fs.@{scope}.@{module}"
                                pomRefId="maven.artifact.@{module}"/>
        </sequential>
    </macrodef>

    <macrodef name="maven.pom">
        <attribute name="file"/>
        <attribute name="id"/>
        <sequential>
            <artifact:pom xmlns:artifact="urn:maven-artifact-ant" file="@{file}" id="@{id}"/>
        </sequential>
    </macrodef>

    <macrodef name="maven.remote.repository">
        <attribute name="id"/>
        <attribute name="url"/>
        <sequential>
            <artifact:remoteRepository xmlns:artifact="urn:maven-artifact-ant" id="@{id}" url="@{url}"/>
        </sequential>
    </macrodef>

    <macrodef name="maven.dependencies">
        <attribute name="useScope"/>
        <attribute name="filesetId"/>
        <attribute name="pomRefId"/>
        <sequential>
            <artifact:dependencies xmlns:artifact="urn:maven-artifact-ant" useScope="@{useScope}"
                                   filesetId="@{filesetId}">
                <remoteRepository refid="ibiblio.remote.repository"/>
                <remoteRepository refid="repo1.remote.repository"/>
                <pom refid="@{pomRefId}"/>
            </artifact:dependencies>
        </sequential>
    </macrodef>

    <target name="-initMaven" depends="-mavenAntTaskdef,-maven-pom-definitions,-maven-repository-definitions"/>

    <target name="-maven-pom-definitions">
        <maven.pom file="config/maven/main.pom" id="maven.artifact.main"/>
        <maven.pom file="config/maven/tools.pom" id="maven.artifact.tools"/>
    </target>

    <target name="-maven-repository-definitions">
        <maven.remote.repository id="repo1.remote.repository" url="http://repo1.maven.org/maven2/"/>
        <maven.remote.repository id="ibiblio.remote.repository" url="http://ibiblio.org/maven2/"/>
    </target>

    <target name="-mavenFetchAllModules" depends="-initMaven">
        <fetch.maven.all.modules/>
    </target>

    <target name="-fetchDependencies" depends="-mavenFetchAllModules,-copyLibraries"/>

    <target name="-copyLibraries">
        <delete dir="${mainTestDirectory}"/>
        <delete dir="${mainCompileDirectory}"/>
        <delete dir="${mainRuntimeDirectory}"/>
        <delete dir="${toolsDirectory}"/>

        <mkdir dir="${mainDirectory}"/>
        <mkdir dir="${mainTestDirectory}"/>
        <mkdir dir="${mainCompileDirectory}"/>
        <mkdir dir="${mainRuntimeDirectory}"/>
        <mkdir dir="${toolsDirectory}"/>

        <copy todir="${mainTestDirectory}">
            <mapper type="flatten"/>
            <fileset refid="fs.test.main"/>
        </copy>
        <path id="mainTestPath">
            <fileset dir="${mainTestDirectory}" includes="**/*.jar"/>
        </path>
        <copy todir="${mainCompileDirectory}">
            <mapper type="flatten"/>
            <fileset refid="fs.compile.main"/>
        </copy>
        <path id="mainCompilePath">
            <fileset dir="${mainCompileDirectory}" includes="**/*.jar"/>
        </path>
        <copy todir="${mainRuntimeDirectory}">
            <mapper type="flatten"/>
            <fileset refid="fs.runtime.main"/>
        </copy>
        <path id="mainRuntimePath">
            <fileset dir="${mainRuntimeDirectory}" includes="**/*.jar"/>
        </path>
        <copy todir="${toolsDirectory}">
            <mapper type="flatten"/>
            <fileset refid="fs.runtime.tools"/>
        </copy>
        <path id="toolsPath">
            <fileset dir="${toolsDirectory}" includes="**/*.jar"/>
        </path>
    </target>

    <target name="-mavenAntTaskdef">
        <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant">
            <classpath>
                <pathelement location="${bootstrapDirectory}/maven-artifact-ant-2.0.4-dep.jar"/>
            </classpath>
        </typedef>
    </target>

    <target name="-checkstyleTaskdef">
        <taskdef resource="checkstyletask.properties" uri="antlib:com.puppycrawl.tools.checkstyle"
                 classpathref="toolsPath"/>
    </target>

    <target name="-checkstyle" xmlns:cs="antlib:com.puppycrawl.tools.checkstyle" depends="-checkstyleTaskdef">
        <mkdir dir="${checkstyleReportDirectory}"/>
        <property name="checkstyle.result" location="${checkstyleReportDirectory}/result"/>
        <cs:checkstyle config="config/checkstyle/config.xml"
                       failureProperty="checkstyle.failure"
                       failOnViolation="false"
                classpathref="checkstyleLibPath">
            <formatter type="xml" tofile="${checkstyle.result}.xml"/>
            <fileset dir="${checkstyleSourceDirectory}"/>
        </cs:checkstyle>
        <property name="checkstyleReportDirAbsolute" location="${checkstyleReportDirectory}"/>
        <xslt in="${checkstyle.result}.xml" out="${checkstyle.result}.html"
               style="config/checkstyle/checkstyle-frames.xsl">
            <param name="output.dir" expression="${checkstyleReportDirAbsolute}"/>
        </xslt>
    </target>
</project>